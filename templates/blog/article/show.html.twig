{% extends 'base.html.twig' %}

{% block title %}{{ parent() }} | {{ title }}{% endblock %}

{% block body %}

    {% set user = article.author %}
    <section id="showArticle">
        {{include('partials/_navbarMenu.html.twig')}}
    
        <div class="container-fluid wrapper">
            <div class="row col-xs-12 col-md-10" id="wrapArticleContent">
                    <h2>{{article.title}}</h2>  
                <div class="col-md-8">
                    {{include('/partials/_articleMediaShow.html.twig')}}
                    <div class="d-flex justify-content-between align-items-center px-1">
                        <div class="user">
                            <div class="avatar">
                                    <img src="{{asset('/uploads/avatar/'~ user.avatar)}}" alt="avatar de {{user.nickname}}" class="img-fluid"/>
                            </div>
                                <h2><a href="{{path('account_profile', {'nickname': user.nickname })}}">{{user.nickname}}</a> </h2>
                        </div>
                        <div>
                            <span class="mx-2">
                            {{article.views}}{{article.views <= 1 ? ' vue':' vues'}} • {{article.createdAt|date('d-m-Y')}}
                            </span>

                            <button type="button" class="btn btn-light text-danger" data-bs-toggle="modal" data-bs-target="#articleAlert"><i class="fa-solid fa-triangle-exclamation fa-2x"></i></button>
                          
                            <button type="button" class="btn" id="like-article" data-id='{{article.id}}'>
                            {% set isLiked = false %}
                                {# Si il y a des likes, on verifie dans ces likes si il y en a un qui a une correspondance avec l'user connecté #}
                                    {% if article.likes %}
                                        {% for like in article.likes %}
                                            {% if like.user == app.user %}
                                                {# si il y a une correspondance entre l'user connecté et le like dans la bdd, on met isLiked en true pour que le pouce soit activé #}
                                                {% set isLiked = true %}
                                            {% endif %}
                                        {% endfor %}
                                    {% endif %}

                                    {% if isLiked %} {# l'user aime déjà la vidéo #}
                                          <i class="fa-solid fa-thumbs-up fa-2x"></i>
                                    {% else %} {# l'user n'aime pas encore la vidéo #}
                                          <i class="fa-regular fa-thumbs-up fa-2x"></i>
                                    {% endif %}
                                    <span id="like_count">
                                        {{article.likes|length }}
                                    </span>
                            </button>
                        </div>
                    </div>
                    <div class="my-3 article-content-show">
                        <p class="pe-4">{{article.content|raw}}</p>    
                    </div>
                    
                    {# Espace commentaire #}
                    <div class="addCommentForm">
                        {{form_start(form)}}
                            {{form_widget(form)}}
                            <button type="submit" class="btn">Valider</button>
                        {{form_end(form)}}
                    </div>
                    <div>
                    {# pour chaque commentaire, affichage du contenu + auteur + possibilité de supprimer ses propres commentaires #}
                        {% for comment in article.comments %}
                        <div class="commentWrap">
                            <div class="commentAuthor">
                                <div>
                                    <img src="{{asset('uploads/avatar/'~ comment.author.avatar)}}" alt="avatar de {{comment.author.nickname}}">
                                    <a href="{{path('account_profile', {'nickname': comment.author.nickname })}}">{{comment.author.nickname}}</a>
                                    <span class="text-muted">
                                        • {{comment.createdAt|date('d-m-Y H:i')}}
                                    </span>
                                </div>
                                
                                {# Si le commentaire appartient à l'auteur, il peut le supprimer #}
                                {% if comment.author == app.user %}
                                    <a href="{{path('comment_delete', {'id': comment.id})}}" class="btn btn-danger btn-sm">X Supprimer</a>
                                {% else %}
                                    {% set isAlreadyAlerted = false %}
                                    {% for alertComment in comment.alertComments %}
                                        {% if alertComment.user == app.user %}
                                            {% set isAlreadyAlerted = true %} 
                                        {% endif %}
                                    {% endfor %}
                                {% endif %}
                                {% if isAlreadyAlerted %}
                                    <a href="{{path('comment_alert', {'id': comment.id})}}" class="btn text-danger alertMessage" data-alert="alert-{{comment.id}}"><i class="fa-solid fa-triangle-exclamation"></i> <span class="px-1 text-danger">Commentaire signalé !</span></a>  
                                {% else %}
                                    <a href="{{path('comment_alert', {'id': comment.id})}}" class="btn text-danger" data-alert="alert-{{comment.id}}"><i class="fa-solid fa-triangle-exclamation"><span></span></i></a>
                                {% endif %}
                                
                            </div>
                                {{comment.content|raw}}
                        </div>
                        {% endfor %}
                    </div>

                    
                </div>
                <div class="col-md-4">
                {# articles du même auteur #}
                    <div class="row g-4" id="wrapSameAuthorArticle">
                    {% if articles|length > 0 %}
                        {% for article in articles %}
                             <div class="col-md-6">
                                <div class="card">
                                <div class="thumb-wrap">
                                    {% if article.video %}
                                        <img src="{{asset('uploads/article/video/thumb/'~ article.video.thumbnail)}}" class="card-img-top" alt="Vignette de l'article {{article.title}} de {{article.author}}">
                                    {% elseif article.images is not empty %}
                                            {% for image in article.images %}
                                                {% if loop.first %}
                                                    <img class="figure-img rounded" src="{{asset('/uploads/article/image/'~ image.source)}}" alt="Image d'illustration de l'article {{article.title}}" >
                                                {% endif %}
                                            {% endfor %}
                                    {% else %}
                                            <img class="figure-img rounded img-fluid" src="{{asset('/img/blogDefault.png')}}" alt="Image d'illustration par défaut" >
                                    {% endif %}
                                </div>
                                        <div class="card-body">
                                            <h5 class="card-title">{{article.title}}</h5>
                                            {% set articleContent = article.content|u.truncate(30, '...', false) %}
                                            <p class="card-text">{{articleContent|raw}}</p>
                                            <a href="{{path('article_show', {'slug':article.slug})}}" class="stretched-link"></a>
                                        </div>
                                    </div>
                                </div>  
                        {% endfor %}
                    {% else %}
                        <div class="alert alert-warning text-center">{{article.author.nickname}} n'a pas encore posté de contenu supplémentaire.</div>
                    {% endif %}
                    </div>
                </div>
            </div>
        </div>

    </section>

<!-- Modal signalement article -->
<div class="modal fade" id="articleAlert" tabindex="-1" aria-labelledby="articleAlert" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Voulez-vous signaler cet article ?</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        {{form_start(formAlert)}}
            {{form_widget(formAlert)}}
        
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fermer</button>
        <button type="submit" class="btn btn-danger"><i class="fa-solid fa-triangle-exclamation"></i> Signaler</button>
        {{form_end(formAlert)}}
      </div>
    </div>
  </div>
</div>
    <script>
        window.onload = () => {
        // Gestion des boutons de signalement
        let links = document.querySelectorAll("[data-alert]");
       
        
        // On boucle sur liens
        for(let link of links){ 
           
            link.addEventListener("click", function(e){
            
                e.preventDefault();
                 
                    // On envoie une requête Ajax 
                    fetch(this.getAttribute("href"), {
                        method: "POST",
                        headers: {
                            "X-Requested-With": "XMLHttpRequest",
                            "Content-Type": "application/json"
                        }
                    }).then(
                        // On récupère la réponse en JSON
                        response => response.json()
                    ).then(data => {
                        if(data.success){
                            //on switch le message d'alerte pour avoir la confirmation visuelle du signalement ou de l'enlèvement du signalemement
                            link.classList.toggle('alertMessage');
                            link.innerHTML = link.classList.contains('alertMessage') ? `<i class="fa-solid fa-triangle-exclamation"></i><span class="px-1 text-danger"> Commentaire signalé !</span>` : `<i class="fa-solid fa-triangle-exclamation"></i>`
                        } else
                        alert(data.error)
                    })
            })
        }
    }
</script>

   {% endblock %}

{# PLYR #}
{% block stylesheets %}  
        <link rel="stylesheet" href="https://cdn.plyr.io/3.7.2/plyr.css" />
{% endblock %}

{% block javascripts %}
    <script>

        import Plyr from 'plyr';
        const player = new Plyr('#player');

        <script src="https://cdn.plyr.io/3.7.2/plyr.js"></script>

    
  </script>  
{% endblock %}